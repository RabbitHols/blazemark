(this.webpackJsonpblazemark=this.webpackJsonpblazemark||[]).push([[0],{13:function(n,e,t){},14:function(n,e,t){n.exports=t.p+"static/js/my-first-worker.e587806b.chunk.worker.js"},15:function(n,e,t){},27:function(n,e,t){"use strict";t.r(e);var o=t(0),a=t.n(o),i=t(5),s=t.n(i),r=(t(13),t(1)),l=t(6),h=(t(15),t(7)),d=(t(22),t(25),t(26),function(){var n=Object(o.useState)('# Blaze Mark \u26a1\n\n\n  **It\'s fast**. The markdown parse is moved on a separate thread, without polluting the main thread, that\'s allow the user to write without beeing blocked from the markdown parser.\n  \n  The parse under the hood is done with [md4c](https://github.com/mity/md4c)\n  \n  The editor is [Codemirror](https://codemirror.net/), While writing inside the editor, a webworker run the wasm module, so the main thread is never polluted allowing the user to write without waiting the markdown parse to finish.\n  \n  You can benchmark it with your favorite web markdown editor, by pasting huge text:\n  \n  - [Stackedit](https://stackedit.io/)\n  - [Editor.MD](https://pandao.github.io/editor.md/en.html)\n  - [Dillinger](https://dillinger.io/)\n  \n  \n  \n  #### TODO:\n  - I should pass to the md4c only the visible markdown element in the viewport, doesn\'t make sense to render all the document.\n  \n  \n  \n  # Here below a big markdown text to play with it \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ---\n  An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.\n  An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.\n  An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.An h1 header\n  ============\n  \n  Paragraphs are separated by a blank line.\n  \n  2nd paragraph. *Italic*, **bold**, and monospace. Itemized lists\n  look like:\n  \n    * this one\n    * that one\n    * the other one\n  \n  Note that --- not considering the asterisk --- the actual text\n  content starts at 4-columns in.\n  \n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \n  Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it\'s all\n  in chapters 12--14"). Three dots ... will be converted to an ellipsis.\n  Unicode is supported. \u263a\n  \n  \n  \n  An h2 header\n  ------------\n  \n  Here\'s a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \n  Note again how the actual text starts at 4 columns in (4 characters\n  from the left side). Here\'s a code sample:\n  \n      # Let me re-iterate ...\n      for i in 1 .. 10 { do-something(i) }\n  \n  As you probably guessed, indented 4 spaces. By the way, instead of\n  indenting the block, you can use delimited blocks, if you like:\n  \n  ~~~\n  define foobar() {\n      print "Welcome to flavor country!";\n  }\n  ~~~\n  \n  (which makes copying & pasting easier). You can optionally mark the\n  delimited block for Pandoc to syntax highlight it:\n  \n  ~~~python\n  import time\n  # Quick, count to ten!\n  for i in range(10):\n      # (but not *too* quick)\n      time.sleep(0.5)\n      print(i)\n  ~~~\n  \n  \n  \n  ### An h3 header ###\n  \n  Now a nested list:\n  \n   1. First, get these ingredients:\n  \n        * carrots\n        * celery\n        * lentils\n  \n   2. Boil some water.\n  \n   3. Dump everything in the pot and follow\n      this algorithm:\n  \n          find wooden spoon\n          uncover pot\n          stir\n          cover pot\n          balance wooden spoon precariously on pot handle\n          wait 10 minutes\n          goto first step (or shut off burner when done)\n  \n      Do not bump wooden spoon or it will fall.\n  \n  Notice again how text always lines up on 4-space indents (including\n  that last line which continues item 3 above).\n  \n  Here\'s a link to [a website](http://foo.bar), to a [local\n  doc](local-doc.html), and to a [section heading in the current\n  doc](#an-h2-header). Here\'s a footnote [^1].\n  \n  [^1]: Some footnote text.\n  \n  Tables can look like this:\n  \n  Name           Size  Material      Color\n  ------------- -----  ------------  ------------\n  All Business      9  leather       brown\n  Roundabout       10  hemp canvas   natural\n  Cinderella       11  glass         transparent\n  \n  Table: Shoes sizes, materials, and colors.\n  \n  (The above is the caption for the table.) Pandoc also supports\n  multi-line tables:\n  \n  --------  -----------------------\n  Keyword   Text\n  --------  -----------------------\n  red       Sunsets, apples, and\n            other red or reddish\n            things.\n  \n  green     Leaves, grass, frogs\n            and other things it\'s\n            not easy being.\n  --------  -----------------------\n  \n  A horizontal rule follows.\n  \n  ***\n  \n  Here\'s a definition list:\n  \n  apples\n    : Good for making applesauce.\n  \n  oranges\n    : Citrus!\n  \n  tomatoes\n    : There\'s no "e" in tomatoe.\n  \n  Again, text is indented 4 spaces. (Put a blank line between each\n  term and  its definition to spread things out more.)\n  \n  Here\'s a "line block" (note how whitespace is honored):\n  \n  | Line one\n  |   Line too\n  | Line tree\n  \n  and images can be specified like so:\n  \n  ![example image](example-image.jpg "An exemplary image")\n  \n  Inline math equation: $omega = dphi / dt$. Display\n  math should get its own line like so:\n  \n  $$I = int \rho R^{2} dV$$\n  \n  And note that you can backslash-escape any punctuation characters\n  which you wish to be displayed literally, ex.: \foo, *bar*, etc.\n  '),e=Object(r.a)(n,2),t=e[0],i=e[1],s=Object(l.a)(t);return a.a.createElement("div",{className:"App"},a.a.createElement("div",null,a.a.createElement(h.Codemirror,{value:t,options:{lineNumbers:!0,lineWrapping:!0,mode:"markdown",tabSize:2},onChange:function(n,e){i(n)}})),a.a.createElement("div",{dangerouslySetInnerHTML:{__html:s.total}}))});Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(a.a.createElement(d,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(n){n.unregister()}))},6:function(n,e,t){"use strict";(function(n){t.d(e,"a",(function(){return s}));var o=t(1),a=t(3),i=t(0);function s(e){var t=Object(i.useState)({isCalculating:!1,total:""}),s=Object(o.a)(t,2),r=s[0],l=s[1],h=function(){var e=Object(i.useMemo)((function(){return function(){var e=new Worker(n,{name:"my-first-worker"}),t=Object(a.b)(e);return{workerApi:t,cleanup:function(){t[a.a](),e.terminate()}}}()}),[]);return Object(i.useEffect)((function(){var n=e.cleanup;return function(){n()}}),[e]),e}().workerApi;return Object(i.useEffect)((function(){l({isCalculating:!0,total:""}),h.processMarkdownWithWorker(e).then((function(n){return l({isCalculating:!1,total:n})}))}),[h,l,e]),r}}).call(this,t(14))},8:function(n,e,t){n.exports=t(27)}},[[8,1,2]]]);
//# sourceMappingURL=main.f977fab2.chunk.js.map